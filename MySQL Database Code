create database smsdb;
USE smsdb;
CREATE TABLE CLASS_MSTR (CLASS_CODE INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
CLASS INT NOT NULL ,
SECTION VARCHAR(2) NOT NULL
);
delete from CLASS_MSTR where CLASS_CODE >= 0;
select * from CLASS_MSTR;
drop table class_mstr;
show tables;
drop schema smsdb;
CREATE TABLE TEACHER_MSTR (TEACHER_ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
FIRST_NAME VARCHAR(25),
LAST_NAME VARCHAR(25),
GENDER VARCHAR(10),
JOIN_DATE DATE NOT NULL,
END_DATE DATE,
SUBJECT1 VARCHAR(30),
SUBJECT2 VARCHAR(30),
EMAIL_ID VARCHAR(40),
PHONE_NUMBER VARCHAR(15),
CITY VARCHAR(40));
DROP TABLE TEACHER_MSTR;
select * from TEACHER_MSTR;

CREATE TABLE CLASS_TEACHER_MSTR(TEACHER_ID INT NOT NULL,
CLASS_CODE INT,
SUBJECT_NAME VARCHAR(255),
START_DATE DATE,
END_DATE DATE,
FOREIGN KEY(TEACHER_ID)
REFERENCES TEACHER_MSTR(TEACHER_ID), 
FOREIGN KEY (CLASS_CODE)
REFERENCES CLASS_MSTR(CLASS_CODE));
DROP TABLE CLASS_TEACHER_MSTR;
SELECT * FROM CLASS_TEACHER_MSTR;

CREATE TABLE STUDENT_MSTR (REGISTRATION_NUMBER INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
ADMISSION_DATE DATE NOT NULL,
FIRST_NAME VARCHAR(20),
LAST_NAME VARCHAR(20),
DATE_OF_BIRTH DATE,
GENDER VARCHAR(10),
STUDENT_MOBILE_NUMBER VARCHAR(15),
FATHER_NAME VARCHAR(20),
FATHER_MOBILE_NUMBER VARCHAR(15),
MOTHER_NAME VARCHAR(20),
MOTHER_MOBILE_NUMBER VARCHAR(15),
CITY VARCHAR(20),
AADHAR_NUMBER VARCHAR(20),
ALUMINI VARCHAR(10));
select * from STUDENT_MSTR;

DROP TABLE STUDENT_MSTR;

CREATE TABLE CLASS_DTLS(CLASS INT NOT NULL PRIMARY KEY,
SECTION VARCHAR(2) NOT NULL,
CLASS_TEACHER VARCHAR(20),
STUDENT_COUNT INT,
VALID_INVALID VARCHAR(10),
FOREIGN KEY(CLASS,SECTION)
REFERENCES CLASS_MSTR(CLASS,SECTION));
drop table class_dtls;
select * from CLASS_DTLS;
CREATE TABLE TEACHER_ATTENDANCE(TEACHER_CODE INT NOT NULL PRIMARY KEY,
DATE_ DATE,
AVAILABLE VARCHAR(2),
FOREIGN KEY (TEACHER_CODE)
REFERENCES TEACHER_MSTR(TEACHER_ID)); 
DROP TABLE TEACHER_ATTENDANCE;

CREATE TABLE TEACHER_LEAVE_DTLS(TEACHER_CODE INT NOT NULL PRIMARY KEY,
START_DATE DATE,
END_DATE DATE,
REASON VARCHAR(50),
FOREIGN KEY(TEACHER_CODE)
REFERENCES TEACHER_MSTR(TEACHER_ID));
DROP TABLE TEACHER_LEAVE_DTLS;
select * from TEACHER_LEAVE_DTLS;

CREATE TABLE STUDENT_ATTENDANCE(REGISTRATION_NUMBER INT NOT NULL PRIMARY KEY,
DATE_ DATE,
AVAILABLE VARCHAR(2),
FOREIGN KEY(REGISTRATION_NUMBER)
REFERENCES STUDENT_MSTR(REGISTRATION_NUMBER));
DROP TABLE STUDENT_ATTENDANCE;
select * from STUDENT_ATTENDANCE;

CREATE TABLE STUDENT_LEAVE_DTLS(REGISTRATION_NUMBER INT NOT NULL PRIMARY KEY,
START_DATE DATE,
END_DATE DATE,
REASON VARCHAR(40),
FOREIGN KEY (REGISTRATION_NUMBER)
REFERENCES STUDENT_MSTR(REGISTRATION_NUMBER));
SELECT * FROM STUDENT_LEAVE_DTLS;
select * from teacher_mstr;

-- INDEXING -----------------------------------------------------------------------
CREATE UNIQUE INDEX CLASS_CODE
ON CLASS_MSTR(CLASS, SECTION);

CREATE UNIQUE INDEX TEACHER_ID
ON TEACHER_MSTR(FIRST_NAME, LAST_NAME);

CREATE UNIQUE INDEX STUDENT_CODE
ON STUDENT_MSTR(FIRST_NAME, LAST_NAME, FATHER_NAME);

-- VIEW -----------------------------------------------------------------------
CREATE VIEW Class_mstr_view AS
SELECT CLASS_CODE, CLASS, SECTION 
FROM CLASS_MSTR;

select * from Class_mstr_view;
